---
import Layout from "../layouts/Layout.astro";
import { getCollection } from 'astro:content';
import { marked } from 'marked';

// Set the page title and description
const title = "Resume | Jesse Naiman";
const pageDescription = "Jesse Naiman's professional resume and cover letter";

// Load resume and cover letter markdown content
const resumeEntries = await getCollection('resume');
const resumeEntry = resumeEntries.find(entry => entry.slug === 'resume');
const coverEntry = resumeEntries.find(entry => entry.slug === 'cover');

// Parse markdown content to HTML
const resumeHtml = resumeEntry ? marked.parse(resumeEntry.body) : '';
const coverHtml = coverEntry ? marked.parse(coverEntry.body) : '';

// Handle print functionality
const printResume = "window.print();";
---

<Layout 
  title={title}
  primaryBallColor="#4F46E5" 
  secondaryBallColor="#1E1B4B"
>
  <Fragment set:html={`<meta name="description" content="${pageDescription}" />`} />
  <main class="container mx-auto px-4 py-12 max-w-4xl print:max-w-none relative">
    <!-- Print Button -->
    <div class="flex justify-end mb-6 print:hidden">
      <button 
        onclick={printResume}
        class="px-4 py-2 bg-primary text-primary-content rounded-lg hover:bg-primary-focus transition-colors flex items-center gap-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
        </svg>
        Print Resume
      </button>
    </div>

    <!-- Toggle Button (Floating) using DaisyUI -->
    <div class="fixed bottom-8 right-8 z-50 print:hidden">
      <div class="dropdown dropdown-top dropdown-end">
        <label tabindex="0" class="btn btn-primary m-1 gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
          </svg>
          View Options
        </label>
        <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
          <li><a id="view-cover-btn">View Cover Letter</a></li>
          <li><a id="view-resume-btn">View Resume</a></li>
        </ul>
      </div>
    </div>

    <div class="space-y-12 print:space-y-8">
      <!-- Cover Letter (Shown First) -->
      <section id="cover-section" class="content-container print:border-none print:shadow-none">
        <h2 class="section-header print:text-xl">Cover Letter</h2>
        <div class="prose max-w-none">
          <div set:html={coverHtml} />
        </div>
      </section>

      <!-- Resume Content (Hidden Initially) -->
      <section id="resume-section" class="content-container print:border-none print:shadow-none hidden">
        <h2 class="section-header print:text-xl">Resume</h2>
        <article class="prose max-w-none">
          <div set:html={resumeHtml} />
        </article>
      </section>
    </div>
  </main>
</Layout>

<style>
  /* Print styles */
  @media print {
    @page {
      size: A4;
      margin: 1.5cm;
    }
    
    body {
      -webkit-print-color-adjust: exact !important;
      print-color-adjust: exact !important;
      background: white !important;
      color: black !important;
      font-size: 12pt;
      line-height: 1.5;
    }

    .content-container {
      box-shadow: none !important;
      border: 1px solid #e5e7eb !important;
      page-break-inside: avoid;
    }

    .section-header {
      color: #1e40af !important;
      border-bottom: 2px solid #e5e7eb !important;
    }

    h1, h2, h3, h4, h5, h6 {
      page-break-after: avoid;
      color: #1e40af !important;
    }

    a {
      color: #1e40af !important;
      text-decoration: none !important;
    }

    .prose a {
      color: #1e40af !important;
    }
    
    /* Ensure URLs are visible in print */
    a[href^="http"]::after {
      content: " (" attr(href) ")";
      font-size: 0.8em;
      font-weight: normal;
      opacity: 0.8;
    }
    
    /* Hide print button when printing */
    .print-button {
      display: none !important;
    }
  }
  
  /* Ensure proper spacing for print */
  @page :first {
    margin-top: 0;
  }
  
  /* Improve link visibility */
  a {
    word-break: break-word;
  }
  
  /* Card hover effect */
  .experience-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .experience-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
</style>

<script>
  // Toggle between cover letter and resume using DaisyUI components
  document.addEventListener('DOMContentLoaded', () => {
    const viewCoverBtn = document.getElementById('view-cover-btn');
    const viewResumeBtn = document.getElementById('view-resume-btn');
    const coverSection = document.getElementById('cover-section');
    const resumeSection = document.getElementById('resume-section');
    
    // Show cover letter, hide resume
    if (viewCoverBtn && coverSection && resumeSection) {
      viewCoverBtn.addEventListener('click', () => {
        coverSection.classList.remove('hidden');
        resumeSection.classList.add('hidden');
      });
    }
    
    // Show resume, hide cover letter
    if (viewResumeBtn && coverSection && resumeSection) {
      viewResumeBtn.addEventListener('click', () => {
        coverSection.classList.add('hidden');
        resumeSection.classList.remove('hidden');
      });
    }
  });
</script>
