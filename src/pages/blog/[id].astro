---
import { getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPostLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;

// If no post is found, redirect to 404
if (!post) {
  return Astro.redirect('/404');
}

const { Content } = await post.render();

// Format the publication date
const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<BlogPost 
  title={post.data.title} 
  description={post.data.description}
>
  <div class="mb-8 text-sm text-base-content/70">
    <div class="flex items-center gap-2 mb-2">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      <span>Published on {formattedDate}</span>
    </div>
    
    {post.data.tags && post.data.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mt-3">
        {post.data.tags.map((tag) => (
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary/80">
            {tag}
          </span>
        ))}
      </div>
    )}
  </div>
  
  <div class="prose dark:prose-invert max-w-none">
    <Content />
  </div>
  
  <div class="mt-12 pt-6 border-t border-base-300">
    <a href="/blog" class="inline-flex items-center text-primary hover:text-primary/80 transition-colors">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
      </svg>
      Back to all posts
    </a>
  </div>
</BlogPost>