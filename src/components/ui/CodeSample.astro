---
import CodeModal from './CodeModal.astro';

interface Props {
  id?: string;
  title?: string;
  code: string;
  lang?: string;
  showLineNumbers?: boolean;
  wrapLongLines?: boolean;
  showModalButton?: boolean;
  githubUrl?: string;
  fileName?: string;
}

const {
  id,
  title = 'Code Sample',
  code,
  lang = 'astro',
  showLineNumbers = false,
  wrapLongLines = true,
  showModalButton = true,
  githubUrl,
  fileName
} = Astro.props;

const modalId = id || `code-${Math.random().toString(36).substr(2, 9)}`;
const languageClass = lang ? `language-${lang}` : '';
const lineNumbersClass = showLineNumbers ? 'line-numbers' : '';
---

<div class="not-prose">
  <div class="bg-base-200 rounded-lg overflow-hidden border border-base-300">
    {title && (
      <div class="flex items-center justify-between px-4 py-2 bg-base-300">
        <span class="text-sm font-mono text-base-content/70">{title}</span>
        {showModalButton && (
          <button 
            class="btn btn-ghost btn-xs gap-1"
            onclick={`document.getElementById('${modalId}').showModal()`}
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 0v12h8V7.414L10.586 4H6z" clip-rule="evenodd" />
            </svg>
            View Code
          </button>
        )}
      </div>
    )}
    <div class="p-4 bg-base-100 overflow-x-auto">
      <pre class={`m-0 ${lineNumbersClass} ${wrapLongLines ? 'whitespace-pre-wrap' : 'whitespace-pre'}`}>
        <code class={languageClass}>
          <slot />
        </code>
      </pre>
    </div>
  </div>
</div>

{showModalButton && (
  <CodeModal 
    id={modalId}
    title={title}
    code={code}
    lang={lang}
    showLineNumbers={showLineNumbers}
    wrapLongLines={wrapLongLines}
    githubUrl={githubUrl}
    fileName={fileName}
  />
)}
