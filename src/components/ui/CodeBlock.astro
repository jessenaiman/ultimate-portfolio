---
interface Props {
  code: string;
  language?: string;
  showLineNumbers?: boolean;
  filename?: string;
}

const { code, language = 'astro', showLineNumbers = true, filename } = Astro.props;
---

<div class="mockup-code bg-base-300 text-base-content">
  {filename && (
    <div class="flex justify-between px-4 py-1 bg-base-200 text-xs font-mono">
      <span>{filename}</span>
      <button 
        class="hover:text-primary transition-colors" 
        onclick={`navigator.clipboard.writeText(\`${code}\`)`}
        title="Copy code"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
          <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
          <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
        </svg>
      </button>
    </div>
  )}
  
  {!filename && (
    <div class="absolute top-2 right-2">
      <button 
        class="btn btn-xs btn-ghost" 
        onclick={`navigator.clipboard.writeText(\`${code}\`)`}
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 20" fill="currentColor">
          <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
          <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
        </svg>
        Copy
      </button>
    </div>
  )}
  
  {showLineNumbers ? (
    code.split('\n').map((line, i) => (
      <pre data-prefix={i + 1}><code>{line || ' '}</code></pre>
    ))
  ) : (
    code.split('\n').map((line) => (
      <pre><code>{line || ' '}</code></pre>
    ))
  )}
</div>
